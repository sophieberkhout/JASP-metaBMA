#       panel.grid.minor = ggplot2::element_blank(),
#       axis.ticks.x = ggplot2::element_line(size = .3),
#       axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside of plot
#       axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
#       axis.text.y = ggplot2::element_text(hjust = 1)
# ) +
ggplot2::xlab("Effect Size") +
# focus x and y axis on range of interest and clip = 'off' to add the text on the right
ggplot2::coord_cartesian(xlim = xlim,
ylim = ylim,
clip = 'off')
plot <- themeJasp(plot,
yAxis = FALSE)
plot <- plot +
ggplot2::theme(axis.title.y = ggplot2::element_blank(),
axis.line.y = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank(),
# plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
# panel.grid.major = ggplot2::element_blank(),
# panel.grid.minor = ggplot2::element_blank(),
# axis.ticks.x = ggplot2::element_line(size = .3),
# axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside plot
# axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
axis.text.y = ggplot2::element_text(hjust = 1)
)
plot <- plot +
ggplot2::geom_polygon(data = d, ggplot2::aes(x = x, y = y)) +
ggplot2::annotate("text", label = text_overall,
x = Inf, y = -0.5, hjust = -0.05, size = 6)+
ggplot2::geom_text(ggplot2::aes(x = -Inf, y = -0.5, label = "FE model"),
hjust = 1.05, size = 6)
forestPlot$plotObject <- plot
return()
}
labels = c(text_observed, text_overall) +
plot <-  ggplot2::ggplot(df,
ggplot2::aes(x = effectSize,
y = as.numeric(reorder(studyLabels, -effectSize))))+
# add dotted vertical line at x = 0
ggplot2::geom_vline(xintercept = 0, linetype = "dotted")+
# add observed points and text
ggplot2::geom_point(shape = 15, size = weight_scaled) +
ggplot2::geom_errorbarh(ggplot2::aes(xmin = lower, xmax = upper), height = .2) +
# ggplot2::annotate("text", label = text_observed,
#          x = shift_right, y = reorder(df$studyLabels, -df$effectSize),
#          hjust = "right", size = 6) +
ggplot2::scale_y_continuous(breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(studyLabels, "Fixed effects"),
sec.axis = ggplot2::sec_axis(~ .,
breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), 0.5),
labels = c(text_observed, text_overall)) +
ggplot2::geom_segment(x = -99, xend = 99, y = 0, yend = 0) +
# ggplot2::theme(axis.title.y = ggplot2::element_blank(),
#       axis.line.y = ggplot2::element_blank(),
#       axis.ticks.y = ggplot2::element_blank(),
#       plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
#       panel.grid.major = ggplot2::element_blank(),
#       panel.grid.minor = ggplot2::element_blank(),
#       axis.ticks.x = ggplot2::element_line(size = .3),
#       axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside of plot
#       axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
#       axis.text.y = ggplot2::element_text(hjust = 1)
# ) +
ggplot2::xlab("Effect Size") +
# focus x and y axis on range of interest and clip = 'off' to add the text on the right
ggplot2::coord_cartesian(xlim = xlim,
ylim = ylim,
clip = 'off')
plot <- themeJasp(plot,
yAxis = FALSE)
plot <- plot +
ggplot2::theme(axis.title.y = ggplot2::element_blank(),
axis.line.y = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank(),
# plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
# panel.grid.major = ggplot2::element_blank(),
# panel.grid.minor = ggplot2::element_blank(),
# axis.ticks.x = ggplot2::element_line(size = .3),
# axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside plot
# axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
axis.text.y = ggplot2::element_text(hjust = 1)
)
plot <- plot +
ggplot2::geom_polygon(data = d, ggplot2::aes(x = x, y = y)) +
ggplot2::annotate("text", label = text_overall,
x = Inf, y = -0.5, hjust = -0.05, size = 6)+
ggplot2::geom_text(ggplot2::aes(x = -Inf, y = -0.5, label = "FE model"),
hjust = 1.05, size = 6)
forestPlot$plotObject <- plot
return()
}
ggplot2::ggplot(df,
ggplot2::aes(x = effectSize,
y = as.numeric(reorder(studyLabels, -effectSize))))+
# add dotted vertical line at x = 0
ggplot2::geom_vline(xintercept = 0, linetype = "dotted")+
# add observed points and text
ggplot2::geom_point(shape = 15, size = weight_scaled) +
ggplot2::geom_errorbarh(ggplot2::aes(xmin = lower, xmax = upper), height = .2) +
# ggplot2::annotate("text", label = text_observed,
#          x = shift_right, y = reorder(df$studyLabels, -df$effectSize),
#          hjust = "right", size = 6) +
ggplot2::scale_y_continuous(breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(studyLabels, "Fixed effects"),
sec.axis = ggplot2::sec_axis(~ .,
breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), 0.5),
labels = c(text_observed, text_overall)) +
ggplot2::geom_segment(x = -99, xend = 99, y = 0, yend = 0) +
# ggplot2::theme(axis.title.y = ggplot2::element_blank(),
#       axis.line.y = ggplot2::element_blank(),
#       axis.ticks.y = ggplot2::element_blank(),
#       plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
#       panel.grid.major = ggplot2::element_blank(),
#       panel.grid.minor = ggplot2::element_blank(),
#       axis.ticks.x = ggplot2::element_line(size = .3),
#       axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside of plot
#       axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
#       axis.text.y = ggplot2::element_text(hjust = 1)
# ) +
ggplot2::xlab("Effect Size") +
# focus x and y axis on range of interest and clip = 'off' to add the text on the right
ggplot2::coord_cartesian(xlim = xlim,
ylim = ylim,
clip = 'off')
plot <-  ggplot2::ggplot(df,
ggplot2::aes(x = effectSize,
y = as.numeric(reorder(studyLabels, -effectSize))))+
# add dotted vertical line at x = 0
ggplot2::geom_vline(xintercept = 0, linetype = "dotted")+
# add observed points and text
ggplot2::geom_point(shape = 15, size = weight_scaled) +
ggplot2::geom_errorbarh(ggplot2::aes(xmin = lower, xmax = upper), height = .2) +
# ggplot2::annotate("text", label = text_observed,
#          x = shift_right, y = reorder(df$studyLabels, -df$effectSize),
#          hjust = "right", size = 6) +
ggplot2::scale_y_continuous(breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(studyLabels, "Fixed effects"),
sec.axis = ggplot2::sec_axis(~ .,
breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), 0.5),
labels = c(text_observed, text_overall))) +
ggplot2::geom_segment(x = -99, xend = 99, y = 0, yend = 0) +
# ggplot2::theme(axis.title.y = ggplot2::element_blank(),
#       axis.line.y = ggplot2::element_blank(),
#       axis.ticks.y = ggplot2::element_blank(),
#       plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
#       panel.grid.major = ggplot2::element_blank(),
#       panel.grid.minor = ggplot2::element_blank(),
#       axis.ticks.x = ggplot2::element_line(size = .3),
#       axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside of plot
#       axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
#       axis.text.y = ggplot2::element_text(hjust = 1)
# ) +
ggplot2::xlab("Effect Size") +
# focus x and y axis on range of interest and clip = 'off' to add the text on the right
ggplot2::coord_cartesian(xlim = xlim,
ylim = ylim,
clip = 'off')
plot
plot <-  ggplot2::ggplot(df,
ggplot2::aes(x = effectSize,
y = as.numeric(reorder(studyLabels, -effectSize))))+
# add dotted vertical line at x = 0
ggplot2::geom_vline(xintercept = 0, linetype = "dotted")+
# add observed points and text
ggplot2::geom_point(shape = 15, size = weight_scaled) +
ggplot2::geom_errorbarh(ggplot2::aes(xmin = lower, xmax = upper), height = .2) +
# ggplot2::annotate("text", label = text_observed,
#          x = shift_right, y = reorder(df$studyLabels, -df$effectSize),
#          hjust = "right", size = 6) +
ggplot2::scale_y_continuous(breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(studyLabels, "Fixed effects"),
sec.axis = ggplot2::sec_axis(~ .,
breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(text_observed, text_overall))) +
ggplot2::geom_segment(x = -99, xend = 99, y = 0, yend = 0) +
# ggplot2::theme(axis.title.y = ggplot2::element_blank(),
#       axis.line.y = ggplot2::element_blank(),
#       axis.ticks.y = ggplot2::element_blank(),
#       plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
#       panel.grid.major = ggplot2::element_blank(),
#       panel.grid.minor = ggplot2::element_blank(),
#       axis.ticks.x = ggplot2::element_line(size = .3),
#       axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside of plot
#       axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
#       axis.text.y = ggplot2::element_text(hjust = 1)
# ) +
ggplot2::xlab("Effect Size") +
# focus x and y axis on range of interest and clip = 'off' to add the text on the right
ggplot2::coord_cartesian(xlim = xlim,
ylim = ylim,
clip = 'off')
plot
plot +
ggplot2::geom_polygon(data = d, ggplot2::aes(x = x, y = y))
plot +
ggplot2::theme(axis.title.y = ggplot2::element_blank(),
axis.line.y = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank(),
# plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
# panel.grid.major = ggplot2::element_blank(),
# panel.grid.minor = ggplot2::element_blank(),
# axis.ticks.x = ggplot2::element_line(size = .3),
# axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside plot
# axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
axis.text.y = ggplot2::element_text(hjust = 1)
)
plot +
ggplot2::theme(axis.title.y = ggplot2::element_blank(),
axis.line.y = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank(),
# plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
# panel.grid.major = ggplot2::element_blank(),
# panel.grid.minor = ggplot2::element_blank(),
# axis.ticks.x = ggplot2::element_line(size = .3),
# axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside plot
# axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
# axis.text.y = ggplot2::element_text(hjust = 1)
)
plot +
ggplot2::theme(axis.title.y = ggplot2::element_blank(),
axis.line.y = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank(),
# plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
# panel.grid.major = ggplot2::element_blank(),
# panel.grid.minor = ggplot2::element_blank(),
# axis.ticks.x = ggplot2::element_line(size = .3),
# axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside plot
# axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
axis.text.y = ggplot2::element_text(hjust = 0)
)
studyLabels
studyLabels <- dataset[, .v(options[["studyLabels"]])]
studyLabels
df <- data.frame(effectSize = varES, studyLabels = studyLabels)
plot <-  ggplot2::ggplot(df,
ggplot2::aes(x = effectSize,
y = as.numeric(reorder(studyLabels, -effectSize))))+
# add dotted vertical line at x = 0
ggplot2::geom_vline(xintercept = 0, linetype = "dotted")+
# add observed points and text
ggplot2::geom_point(shape = 15, size = weight_scaled) +
ggplot2::geom_errorbarh(ggplot2::aes(xmin = lower, xmax = upper), height = .2) +
# ggplot2::annotate("text", label = text_observed,
#          x = shift_right, y = reorder(df$studyLabels, -df$effectSize),
#          hjust = "right", size = 6) +
ggplot2::scale_y_continuous(breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(studyLabels, "Fixed effects"),
sec.axis = ggplot2::sec_axis(~ .,
breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(text_observed, text_overall))) +
ggplot2::geom_segment(x = -99, xend = 99, y = 0, yend = 0) +
# ggplot2::theme(axis.title.y = ggplot2::element_blank(),
#       axis.line.y = ggplot2::element_blank(),
#       axis.ticks.y = ggplot2::element_blank(),
#       plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
#       panel.grid.major = ggplot2::element_blank(),
#       panel.grid.minor = ggplot2::element_blank(),
#       axis.ticks.x = ggplot2::element_line(size = .3),
#       axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside of plot
#       axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
#       axis.text.y = ggplot2::element_text(hjust = 1)
# ) +
ggplot2::xlab("Effect Size") +
# focus x and y axis on range of interest and clip = 'off' to add the text on the right
ggplot2::coord_cartesian(xlim = xlim,
ylim = ylim,
clip = 'off')
plot
plot <- plot +
ggplot2::theme(axis.title.y = ggplot2::element_blank(),
axis.line.y = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank(),
# plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
# panel.grid.major = ggplot2::element_blank(),
# panel.grid.minor = ggplot2::element_blank(),
# axis.ticks.x = ggplot2::element_line(size = .3),
# axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside plot
# axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
axis.text.y = ggplot2::element_text(hjust = 0)
)
plot <- plot +
ggplot2::geom_polygon(data = d, ggplot2::aes(x = x, y = y))
plot
c(studyLabels, "Fixed effects")
df$studyLabels
as.numeric(studyLabels)
as.numeric(df$studyLabels)
studyLabels
plot <-  ggplot2::ggplot(df,
ggplot2::aes(x = effectSize,
y = as.numeric(reorder(studyLabels, -effectSize))))+
# add dotted vertical line at x = 0
ggplot2::geom_vline(xintercept = 0, linetype = "dotted")+
# add observed points and text
ggplot2::geom_point(shape = 15, size = weight_scaled) +
ggplot2::geom_errorbarh(ggplot2::aes(xmin = lower, xmax = upper), height = .2) +
# ggplot2::annotate("text", label = text_observed,
#          x = shift_right, y = reorder(df$studyLabels, -df$effectSize),
#          hjust = "right", size = 6) +
ggplot2::scale_y_continuous(breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(studyLabels2, "Fixed effects"),
sec.axis = ggplot2::sec_axis(~ .,
breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(text_observed, text_overall))) +
ggplot2::geom_segment(x = -99, xend = 99, y = 0, yend = 0) +
# ggplot2::theme(axis.title.y = ggplot2::element_blank(),
#       axis.line.y = ggplot2::element_blank(),
#       axis.ticks.y = ggplot2::element_blank(),
#       plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
#       panel.grid.major = ggplot2::element_blank(),
#       panel.grid.minor = ggplot2::element_blank(),
#       axis.ticks.x = ggplot2::element_line(size = .3),
#       axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside of plot
#       axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
#       axis.text.y = ggplot2::element_text(hjust = 1)
# ) +
ggplot2::xlab("Effect Size") +
# focus x and y axis on range of interest and clip = 'off' to add the text on the right
ggplot2::coord_cartesian(xlim = xlim,
ylim = ylim,
clip = 'off')
studyLabels2 <- towels$study
plot <-  ggplot2::ggplot(df,
ggplot2::aes(x = effectSize,
y = as.numeric(reorder(studyLabels, -effectSize))))+
# add dotted vertical line at x = 0
ggplot2::geom_vline(xintercept = 0, linetype = "dotted")+
# add observed points and text
ggplot2::geom_point(shape = 15, size = weight_scaled) +
ggplot2::geom_errorbarh(ggplot2::aes(xmin = lower, xmax = upper), height = .2) +
# ggplot2::annotate("text", label = text_observed,
#          x = shift_right, y = reorder(df$studyLabels, -df$effectSize),
#          hjust = "right", size = 6) +
ggplot2::scale_y_continuous(breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(studyLabels2, "Fixed effects"),
sec.axis = ggplot2::sec_axis(~ .,
breaks = c(as.numeric(reorder(df$studyLabels, -df$effectSize)), -0.5),
labels = c(text_observed, text_overall))) +
ggplot2::geom_segment(x = -99, xend = 99, y = 0, yend = 0) +
# ggplot2::theme(axis.title.y = ggplot2::element_blank(),
#       axis.line.y = ggplot2::element_blank(),
#       axis.ticks.y = ggplot2::element_blank(),
#       plot.margin = ggplot2::unit(c(1,10,1,1), "lines"), # margin on the right for text
#       panel.grid.major = ggplot2::element_blank(),
#       panel.grid.minor = ggplot2::element_blank(),
#       axis.ticks.x = ggplot2::element_line(size = .3),
#       axis.ticks.length = ggplot2::unit(-1.4, "mm"), # ticks on inside of plot
#       axis.text.x = ggplot2::element_text(margin = ggplot2::unit(c(2.5, 0, 0, 0), "mm")),
#       axis.text.y = ggplot2::element_text(hjust = 1)
# ) +
ggplot2::xlab("Effect Size") +
# focus x and y axis on range of interest and clip = 'off' to add the text on the right
ggplot2::coord_cartesian(xlim = xlim,
ylim = ylim,
clip = 'off')
plot
metaBMA::towels
towels$study
class(towels$study)
str(towels$study)
summary(towels)
towels[[, "study"]]
towels[, "study"]
as.character(towels$study)
text_observed <- paste(round(varES, 2),
" [",
round(lower, 2),
", ",
round(upper, 2),
"]",
sep = "")
text_observed
# text for next to model diamond
text_overall <- paste(round(m$estimates[1, 1], 2),
" [",
round(m$estimates[1, 3], 2),
", ",
round(m$estimates[1, 5], 2),
"]",
sep = "")
text_overall
a <- 0.309
sprintf('%.2f', a)
sprintf('%.2f', 0.333)
sprintf('%.2f', 0.336)
sprintf('%.2f', 0.335)
sprintf('%.2f', 0.3)
rstan::summary(m$meta$random$stanfit_dstudy)$summary[3:(length(varES) + 2), "mean"]
rstan::summary(m$stanfit_dstudy)$summary[3:(length(varES) + 2), "mean"]
rep(c("black", "grey68"), nrow(df))
c(rep(c("black", "grey68"), nrow(df)), rep("black", 3))
rep(c("black", "grey68"), nrow(df))[order]
rep(c("black", "grey68"), nrow(df))
order
# order from low to high observed effect size
order <- rev(attr(reorder(df$effectSize, 1:nrow(df)), "scores"))
order
rep(c("black", "grey68"), nrow(df))[order]
c(rep(c("black", "grey68"), nrow(df)), rep("black", 3))
rep(c("black", "grey68"), nrow(df), each = 2)
rep(c("black", "grey68"), each = nrow(df))
library(metaBMA)
data(towels)
mo <- meta_ordered(towels$logOR, towels$SE)
mo
mo <- meta_ordered(logOR, SE, study, towels,
d = prior("norm", c(mean=0, sd=.3), lower=0),
rel.tol=.Machine$double.eps^.15, iter=2000)
mo$estimates["ordered", "mean"]
library(devtools)
install.packages(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("danheck/metaBMA", ref = "master")
devtools::install_github("danheck/metaBMA", ref = "master")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("ggplot2")
devtools::install_github("danheck/metaBMA", ref = "master")
devtools::install_github("danheck/metaBMA", ref = "master")
devtools::install_github("danheck/metaBMA", ref = "master")
install.packages("rstan")
devtools::install_github("danheck/metaBMA", ref = "master")
devtools::install_github("danheck/metaBMA", ref = "master")
devtools::install_github("danheck/metaBMA", ref = "master")
library("callr", lib.loc="~/R/win-library/3.6")
detach("package:callr", unload=TRUE)
devtools::install_github("danheck/metaBMA", ref = "master")
View(towels)
View(towels)
a <- 1:100
b <- rep(0, 100)
df <- data.frame(a = a, b = b)
ggplot(df)
ggplot2::ggplot(df)
ggplot2::ggplot(df, aes(x = a, y = b)) + geom_point()
ggplot2::ggplot(df, ggplot2::aes(x = a, y = b)) + ggplot2::geom_point()
b <- rep(c(0, 1), each = 50)
b
a <- rnorm(100)
a
ggplot2::ggplot(df, ggplot2::aes(x = a, y = 1:100, group = b)) + ggplot2::geom_point()
b
y <- c(1:50, 1:50)
df <- data.frame(x = a, y = y, g = b)
ggplot2::ggplot(df, ggplot2::aes(x = x, y = y, group = g)) + ggplot2::geom_point()
ggplot2::ggplot(df, ggplot2::aes(x = x, y = y, linetype = g)) + ggplot2::geom_point()
ggplot2::ggplot(df, ggplot2::aes(x = x, y = y, linetype = as.factor(g)) + ggplot2::geom_line()
ggplot2::ggplot(df, ggplot2::aes(x = x, y = y, linetype = as.factor(g))) + ggplot2::geom_line()
plot <- ggplot2::ggplot(df, ggplot2::aes(x = x, y = y, linetype = as.factor(g))) + ggplot2::geom_line()
plot <- ggplot2::ggplot(df, ggplot2::aes(x = x, y = y, group = as.factor(g), linetype = as.factor(g))) + ggplot2::geom_line()
plot
plot+ ggplot2::scale_colour_manual(values = c("black", "red", "green", "black"))
plot <- plot+ ggplot2::scale_colour_manual(values = c("black", "red", "green", "black"))
plot
plot + ggplot2::scale_color_discrete()
plot + ggplot2::geom_line(aes(colour = b))
plot + ggplot2::geom_line(ggplot2::aes(colour = b))
plot + ggplot2::geom_line(ggplot2::aes(colour = as.factor(b)))
devtools::install_github("danheck/metaBMA", ref = "master", args='--no-multiarch')
paste("Heterogeneity", expression(tau))
mo$posterior_d()
mo$posterior_d
x <- seq(-10, 10, 0.001)
test <- mo$posterior_d(x)
library(metaBMA)
install.packages("metaBMA")
test <- mo$posterior_d(x)
library(metaBMA)
library("Rcpp", lib.loc="~/R/win-library/3.6")
remove.packages("Rcpp", lib="~/R/win-library/3.6")
install.packages("Rcpp")
install.packages("Rcpp")
library(metaBMA)
test <- mo$posterior_d(x)
m <- meta_bma(towels$logOR, towels$SE)
m$posterior_d
test <- m$posterior_d(x)
test2 <- test[test>0.001]
x[which(test>0.001)]
x <- x[which(test>0.001)]
x <- seq(-10, 10, 0.001)
x <- x[test>0.001]
attr(, m$posterior_d())
attr(, m$posterior_d
)
m$posterior_d
m$estimates
m$estimates[1, 1]
est <- m$estimates[1, 1]
x <- seq(est - 10, est + 10, .001)
library(devtools)
Sys.setenv(PATH = paste("C:/Rtools/bin", Sys.getenv("PATH"), sep=";"))
Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")
install_github("danheck/metaBMA", ref = "master")
install_github("danheck/metaBMA", ref = "master")
install_github("danheck/metaBMA", ref = "master")
install_github("danheck/metaBMA", ref = "master")
install_github("danheck/metaBMA", ref = "master")
install_github("danheck/metaBMA", ref = "master")
Sys.getenv()['PATH']
install.packages("metaBMA", repos = "https://danheck.github.com/drat/")
install.packages("metaBMA", repos = "https://danheck.github.com/drat/")
library(metaBMA)
mo <- meta_ordered(towels$logOR, towels$SE)
mo <- meta_ordered(logOR, SE, study, towels,
d = prior("norm", c(mean=0, sd=.3), lower=0),
rel.tol=.01, iter=1000)
mo <- meta_ordered(logOR, SE, study, towels,
d = prior("norm", c(mean=0, sd=.3), lower=0),
iter=10000)
